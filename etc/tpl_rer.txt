*rer.txt*       Interact with R via the rescreen vim plugin
                Author: Thomas Link, micathom AT gmail com?subject=vim

Features:

    - Send code to R via |rescreen.txt| (<C-CR>, <C-S-CR>)
        - If |g:rer#client_name| is 'rescreen', gx is defined as 
          operator too.
    - 'omnifunc' completion (|i_CTRL-X_CTRL-O|; works also for function 
      arguments)
    - Use |K| to display informatin on an identifier
    - Source the current buffer (nmap: <LocalLeader>rs)
    - Debug/Undebug a function (n/vmap: <LocalLeader>rd)
    - Display function arguments (n/vmap: <LocalLeader>rf)
    - Show a summary for the word under cursor (nmap: <LocalLeader>rm)
    - Show examples for the word under cursor (nmap: <LocalLeader>re)
    - Run an R function on the word under cursor (nmap: <LocalLeader>rr)
    - Experimental: Set/unset breakpoints (nmap: <LocalLeader>rb)
    - |:Rer| command to send code to R
    - |:Rcd| command to set R working directory to the current buffer 
      (nmap: <LocalLeader>rcd)

The map prefix (<LocalLeader>r) is user-configurable via |g:rer#mapleader|.

This plugin was tested on Linux (Ubuntu) & Windows. On Windows, this plugin 
assumes the use of the native Windows version of R (or rather Rterm) and of 
the Cygwin port of the screen utility.


-----------------------------------------------------------------------
Install~

To install the vimball, edit the vba file and type: >

    :so %%

See `:help vimball` for details.

To install from github, please use a plugin manager like enable_vim, pathogen, 
VAM, Vundle, NeoBundle, vim-plug, vim-unbundle etc.

Dependencies:
    - This script requires tlib_vim (vimscript #1863) to be installed 
      (https://github.com/tomtom/tlib_vim).
    - If |g:rer#client_name| is 'rescreen', the rescreen_vim plugin is 
      required too (https://github.com/tomtom/rescreen_vim).

Also available on https://github.com/tomtom/rer_vim


%s
