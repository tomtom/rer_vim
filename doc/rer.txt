*rer.txt*       Interact with R via the rescreen vim plugin
                Author: Thomas Link, micathom AT gmail com?subject=vim

Features:

    - Send code to R via |rescreen.txt| (<C-CR>, <C-S-CR>, gx operator)
    - 'omnifunc' completion (|i_CTRL-X_CTRL-O|; works also for function 
      arguments)
    - Use |K| to display informatin on an identifier
    - Source the current buffer (nmap: gxrs)
    - Debug/Undebug a function (n/vmap: gxrd)
    - Display function arguments (n/vmap: gxrf)
    - Show a summary for the word under cursor (nmap: gxrm)
    - Show examples for the word under cursor (nmap: gxre)
    - Run an R function on the word under cursor (nmap: gxrr)
    - Experimental: Set/unset breakpoints (nmap: gxrb)
    - |:Rer| command to send code to R
    - |:Rcd| command to set R working directory to the current buffer 
      (nmap: gxrcd)

The map prefix (gx) is user-configurable via |g:rer#mapleader|.

This plugin was tested on Linux (Ubuntu) & Windows. On Windows, this plugin 
assumes the use of the native Windows version of R (or rather Rterm) and of 
the Cygwin port of the screen utility.


-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties or use vim 7.0, 
please make sure, you have the current version of vimball (vimscript 
#1502) installed or update your runtime.

This plugin requires the rescreen vim plugin to be installed 
(https://github.com/tomtom/rescreen_vim).

Certain functions make use of the tlib vim plugin (vimscript #1863) if 
available.


========================================================================
Contents~

        :Rer ............................. |:Rer|
        n_K .............................. |n_K|
        n_<LocalLeader>K ................. |n_<LocalLeader>K|
        :Rerhelp ......................... |:Rerhelp|
        :Rcd ............................. |:Rcd|
        :Rsource ......................... |:Rsource|
        :Rdebug .......................... |:Rdebug|
        :RBreakpoint ..................... |:RBreakpoint|
        :RResetBreakpoints ............... |:RResetBreakpoints|
        g:rer#quicklist .................. |g:rer#quicklist|
        g:rer#mapleader .................. |g:rer#mapleader|
        g:rer#map_eval_and_print ......... |g:rer#map_eval_and_print|
        g:rer#convert_path ............... |g:rer#convert_path|
        g:rer#highlight_debug ............ |g:rer#highlight_debug|
        g:rer#highlight_breakpoint ....... |g:rer#highlight_breakpoint|
        g:rer#shell ...................... |g:rer#shell|
        g:rer#repl ....................... |g:rer#repl|
        g:rer#repl_args .................. |g:rer#repl_args|
        g:rer#save ....................... |g:rer#save|
        g:rer#r_options .................. |g:rer#r_options|
        rer#Keyword ...................... |rer#Keyword()|
        rer#Inspect ...................... |rer#Inspect()|
        rer#CommandComplete .............. |rer#CommandComplete()|
        rer#Completions .................. |rer#Completions()|
        rer#FunctionArgs ................. |rer#FunctionArgs()|
        rer#R_setwd ...................... |rer#R_setwd()|
        rer#Cd ........................... |rer#Cd()|
        rer#RVal ......................... |rer#RVal()|
        rer#RDict ........................ |rer#RDict()|
        rer#SourceBuffer ................. |rer#SourceBuffer()|
        rer#Debug ........................ |rer#Debug()|
        rer#Undebug ...................... |rer#Undebug()|
        rer#GetBreakpointsAsQFL .......... |rer#GetBreakpointsAsQFL()|
        rer#SetBreakpoint ................ |rer#SetBreakpoint()|
        rer#ResetBreakpoints ............. |rer#ResetBreakpoints()|
        rer#SendR ........................ |rer#SendR()|
        rer#Quicklist .................... |rer#Quicklist()|
        prototype.ExitRepl
        prototype.WrapResultPrinter
        prototype.SetTempFile
        prototype.WrapResultWriter
        rescreen#repl#rer#Extend ......... |rescreen#repl#rer#Extend()|


========================================================================
plugin/rer.vim~

                                                    *:Rer*
:Rer
    Send some code to R.


========================================================================
ftplugin/r/rer.vim~

                                                    *n_K*
n_K ... :call rer#Keyword()<cr>
    See |rer#Keyword()| and |K|.

                                                    *n_<LocalLeader>K*
n_<LocalLeader>K ... :call rer#Inspect()<cr>
    Inspect an R object -- see |rer#Inspect()|.

                                                    *:Rerhelp*
:Rerhelp

                                                    *:Rcd*
:Rcd
    Set R's working directory to the current buffer's directory.

                                                    *:Rsource*
:Rsource
    Source the current buffer in R.

                                                    *:Rdebug*
:Rdebug [FUNCTION]
    Debug or undebug FUNCTION.

                                                    *:RBreakpoint*
RBreakpoint [FILENAME]
    List and remove breakpoints.
    If FILENAME is "%", the current buffer is used.

                                                    *:RResetBreakpoints*
:RResetBreakpoints


========================================================================
autoload/rer.vim~

                                                    *g:rer#quicklist*
g:rer#quicklist                (default: ['??"%s"', 'str(%s)', 'edit(%s)', 'debugger()', 'traceback()'])

                                                    *g:rer#mapleader*
g:rer#mapleader                (default: g:rescreen#mapleader)

                                                    *g:rer#map_eval_and_print*
g:rer#map_eval_and_print       (default: '<c-s-cr>')

                                                    *g:rer#convert_path*
g:rer#convert_path             (default: '')

                                                    *g:rer#highlight_debug*
g:rer#highlight_debug          (default: 'SpellRare')
    Highlight group for debugged functions.

                                                    *g:rer#highlight_breakpoint*
g:rer#highlight_breakpoint     (default: 'SpellBad')
    Highlight group for breakpoint

                                                    *g:rer#shell*
g:rer#shell                    (default: g:rescreen#shell)

                                                    *g:rer#repl*
g:rer#repl                     (default: executable('Rterm') ? 'Rterm --ess' : 'R')

                                                    *g:rer#repl_args*
g:rer#repl_args                (default: '')

                                                    *g:rer#save*
g:rer#save                     (default: 1)
    Values:
        0 ... Don't save the image
        1 ... Save an image only if a file .Rdata exists
        2 ... Always save an image

                                                    *g:rer#r_options*
g:rer#r_options                (default: '')
    Options (as string) passed to R.
    Example:>

      let g:rer#r_options = 'warn = 1'.(has('gui_running') ? ', help_type = "html"' : '')

                                                    *rer#Keyword()*
rer#Keyword(?word = "", ?help_type = "")

                                                    *rer#Inspect()*
rer#Inspect(...)
    Inspect the word under the cursor.

                                                    *rer#CommandComplete()*
rer#CommandComplete(ArgLead, CmdLine, CursorPos)

                                                    *rer#Completions()*
rer#Completions(base, ...)
    Omnicompletion for R.
    If the base pattern contains no period ".", matches with periods are 
    removed from the list of possible completions.
    See also 'omnifunc'.

                                                    *rer#FunctionArgs()*
rer#FunctionArgs(word)

                                                    *rer#R_setwd()*
rer#R_setwd(dict)

                                                    *rer#Cd()*
rer#Cd()

                                                    *rer#RVal()*
rer#RVal(value)

                                                    *rer#RDict()*
rer#RDict(dict)

                                                    *rer#SourceBuffer()*
rer#SourceBuffer(bufnr, ?nativeSource = FALSE)

                                                    *rer#Debug()*
rer#Debug(fn)
    Toggle the debug status of a function.

                                                    *rer#Undebug()*
rer#Undebug(fn)
    Undebug a debugged function.

                                                    *rer#GetBreakpointsAsQFL()*
rer#GetBreakpointsAsQFL()

                                                    *rer#SetBreakpoint()*
rer#SetBreakpoint(filename, bplnums)
    This function uses the basename of the filename argument. I.e. if you 
    have more than one file with a given basename is loaded in R, trouble 
    may follow.

                                                    *rer#ResetBreakpoints()*
rer#ResetBreakpoints()

                                                    *rer#SendR()*
rer#SendR(word)

                                                    *rer#Quicklist()*
rer#Quicklist(word)


========================================================================
autoload/rescreen/repl/rer.vim~

prototype.ExitRepl

prototype.WrapResultPrinter

prototype.SetTempFile

prototype.WrapResultWriter

                                                    *rescreen#repl#rer#Extend()*
rescreen#repl#rer#Extend(dict)



vim:tw=78:fo=w2croql:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
